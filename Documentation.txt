Medical Image POC - Documentation

This document explains how I built the project and how it works.

Step 1: Setting up the project I started by creating a new Node.js
project. This gave me a base where I could write and run my application.

Step 2: Installing dependencies I installed the required dependencies
using npm. These dependencies are needed for the project to run
properly.

Step 3: Getting the Gemini API key I went to Google AI Studio and
generated my Gemini API key. This key is important because it allows my
app to connect with Google’s Gemini AI model.

Step 4: Creating environment file I created a file called .env.local in
the project folder and saved my API key there. This keeps the key
private and secure.

Step 5: Importing the code I added the code that connects with the
Gemini API. This code allows the app to send medical images to the AI
model and receive responses.

Step 6: Running the project I ran the project locally using npm. This
started the app on my system so I could test it.

Step 7: Testing with medical images I tested the app by giving it
medical images. The app used Gemini to analyze the images and provide
insights.

Step 8: Hosting on GitHub Finally, I uploaded all my project files to
GitHub so that others can also see and run the project.

How it works: The app takes medical images as input, connects with
Google’s Gemini API, and gets AI-powered insights or analysis. This is a
simple Proof of Concept project meant for learning purposes and not for
real medical use.

